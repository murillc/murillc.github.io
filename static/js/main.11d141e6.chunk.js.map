{"version":3,"sources":["data.ts","global-styles.ts","components/DataBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["personalData","intro","links","softwareProjects","img","title","date","link","text","webappLinks","GlobalStyle","createGlobalStyle","DataBox","props","display","md","className","borderRadius","fontSize","href","proj","isExternal","minW","ratio","src","p","isInline","alignItems","fontWeight","pt","spacing","map","JSONPrettyMon","require","App","useColorMode","toggleColorMode","m","align","maxW","direction","border","borderColor","columns","Object","keys","key","variant","mt","base","ml","project","mainStyle","style","id","data","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d141e6.chunk.js","sourcesContent":["export const personalData = {\r\n    intro: `Hello! I am a 4th year Computer Engineering student at McMaster University, with a keen interest in both web dev and embedded systems. Always looking for new opportunities to learn and apply myself.`,\r\n};\r\n    \r\n\r\nexport const links : { [key:string]: string } = { \r\n    'CompEng Resume':\r\n    'https://drive.google.com/file/d/1ieFEQ5etFs2PdZtFhax6bjcdMt_vDLcU/view?usp=sharing',\r\n    'Software Resume':\r\n    'https://drive.google.com/file/d/1NNoz2-dB6BYPYhED0BKw3QstY_9dcDOK/view?usp=sharing',\r\n    'Github': 'https://github.com/murillc',\r\n    'LinkedIn': 'https://www.linkedin.com/in/crmur/',\r\n};\r\n\r\nexport const softwareProjects = [\r\n{\r\n    img:\r\n    'https://i.imgur.com/gXKrGBQ.png',\r\n    title: 'Time of Flight LIDAR Room Mapper',\r\n    date: 'June 2021',\r\n    link: 'https://github.com/murillc/lidar-room-plotter',\r\n    text: [\r\n    `\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`,\r\n    ],\r\n},\r\n{\r\n    img: 'https://d1sjtleuqoc1be.cloudfront.net/wp-content/uploads/2019/04/25112909/shutterstock_1073953772-860x574.jpg',\r\n    title: 'SocialSentiment ',\r\n    date: 'October 2019',\r\n    link: 'https://github.com/BilalShakh/Social-Sentiment',\r\n    text: [\r\n    `Designed at YHack 2019`,\r\n    `Web-app designed for the JetBlue challenge. The challenge asked to find out what the public thinks of JetBlue and come up with a hypothesis based on the data.`,\r\n    `Utilizes Google Cloud's Natural Language API to analyze the sentiment from posts scraped on social media and displays the data in a bar graph with accompanying details`,\r\n    ],\r\n},\r\n{\r\n    img: 'https://cdn.britannica.com/62/85162-050-C8698F1F/CN-Tower-Toronto.jpg',\r\n    title: 'Software Defined Radio',\r\n    date: 'April 2021',\r\n    link: '/',\r\n    text: [\r\n        `\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`,\r\n    ],\r\n},\r\n{\r\n    img: 'https://cdn.discordapp.com/attachments/482051217736859648/806048517645926400/download_1.png',\r\n    title: 'Hardware Implementation of an Image Decompressor',\r\n    date: 'December 2020',\r\n    link: '/',\r\n    text: [\r\n        `\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`,\r\n    ],\r\n},\r\n];\r\n\r\nexport const webappLinks = [\r\n    {\r\n      img:\r\n        '',\r\n      title: 'Placeholder',\r\n      date: 'June 2021',\r\n      link: '/',\r\n      text: [\r\n        `\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`,\r\n      ],\r\n    },\r\n  ];\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');\r\n  @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@300;400;500;600;700&display=swap');\r\n  \r\n  html,\r\n  body {\r\n    height: 100%;\r\n    width: 100%;\r\n    background: black;\r\n    color: #fff;\r\n  }\r\n\r\n  body {\r\n    font-family: 'IBM Plex Sans', Helvetica, Arial, sans-serif;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6 {\r\n    font-weight: bold;\r\n    font-size: inherit;\r\n    font-family: 'IBM Plex Sans' !important;\r\n  }\r\n\r\n  #root {\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n\r\n  }\r\n\r\n  p,\r\n  label {\r\n    font-family: 'IBM Plex Sans';\r\n    line-height: 1.5em;\r\n  }\r\n\r\n  input, select {\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n  }\r\n\r\n  .pulse {\r\n    border: 1px solid;\r\n  overflow: hidden;\r\n  position: relative;\r\n  \r\n  span {\r\n    z-index: 20;\r\n  }\r\n  \r\n  &:after {\r\n    background: #fff;\r\n    content: \"\";\r\n    height: 155px;\r\n    left: -75px;\r\n    opacity: .2;\r\n    position: absolute;\r\n    top: -50px;\r\n    transform: rotate(35deg);\r\n    transition: all 550ms cubic-bezier(0.19, 1, 0.22, 1);\r\n    width: 50px;\r\n    z-index: -10;\r\n  }\r\n  } \r\n\r\n.pulse:hover {\r\n  &:after {\r\n    left: 120%;\r\n    transition: all 550ms cubic-bezier(0.19, 1, 0.22, 1);\r\n  }\r\n  \r\n}\r\n\r\n\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  AspectRatio,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Heading,\r\n  Link,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\n\r\ninterface Props {\r\n  proj: any;\r\n}\r\n\r\nconst DataBox = (props: Props) => {\r\n  return (\r\n    <>\r\n      <Box display={{ md: \"flex\" }} className=\"pulse\" borderRadius=\"lg\">\r\n        <Link fontSize=\"lg\" href={props.proj.link} isExternal minW=\"300px\">\r\n          <AspectRatio ratio={4 / 3}>\r\n            <Image src={props.proj.img}></Image>\r\n          </AspectRatio>\r\n        </Link>\r\n        <Box p={3}>\r\n          <Stack isInline alignItems=\"center\">\r\n            <Link href={props.proj.link}>\r\n                <Heading fontSize=\"lg\">\r\n                {props.proj.title}\r\n                <span>\r\n                    <Text fontSize=\"sm\" fontWeight=\"normal\">\r\n                    {props.proj.date}\r\n                    </Text>\r\n                </span>\r\n                </Heading>\r\n            </Link>\r\n          </Stack>\r\n\r\n          {props.proj.text && (\r\n            <Stack pt={3} spacing={3}>\r\n              {props.proj.text &&\r\n                props.proj.text.map((text: string) => (\r\n                  <Text>- {text}</Text>\r\n                ))}\r\n            </Stack>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DataBox;\r\n","import React from 'react';\nimport {\n  Box,\n  Heading,\n  Link,\n  SimpleGrid,\n  Stack,\n  useColorMode,\n  VStack\n} from '@chakra-ui/react'\nimport { personalData, links, softwareProjects, webappLinks} from './data';\nimport { FaMoon } from 'react-icons/fa'\n\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\"\n\nimport { GlobalStyle } from './global-styles';\nimport DataBox from './components/DataBox';\n\nimport JSONPretty from 'react-json-pretty';\nvar JSONPrettyMon = require('react-json-pretty/dist/acai');\n\n\n\n\nfunction App() {\n  const { toggleColorMode } = useColorMode()\n  return (\n    <>\n      <Box display={{ md: \"flex\" }} m = {10} spacing={3}>\n        <VStack align=\"left\" maxW = \"md\" minW = \"sm\">\n          <Stack direction = \"row\">\n            <Heading>\n              Carlos Murillo\n            </Heading>\n            {/* <IconButton\n              align=\"right\"\n              aria-label=\"Switch darkmode\"\n              icon={<FaMoon/>}\n              onClick={toggleColorMode}\n            >\n              \n            </IconButton> */}\n          </Stack>\n          \n          <Box border = \"1px\" p={1} borderColor=\"gray.700\">\n            {personalData.intro}\n          </Box>\n          <SimpleGrid columns={2}>\n            {Object.keys(links).map(\n              key => (\n                <Link\n                  display=\"block\"\n                  href={links[key]}\n                  isExternal\n                >\n                  {key}\n                </Link>\n              )\n            )}\n          </SimpleGrid>\n        </VStack>\n        \n        <Tabs variant=\"enclosed-colored\" mt={{ base: 4, md: 0 }} ml={{md: 3}}>\n          <TabList>\n            <Tab>Projects</Tab>\n            <Tab>Webapps</Tab>\n            <Tab>Raw Data</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Stack spacing={3}>\n                {softwareProjects.map(project => (\n                  <DataBox proj={project} />\n                ))}\n              </Stack>\n            </TabPanel>\n            <TabPanel>\n              <Stack spacing={3}>\n                {webappLinks.map(project => (\n                  <DataBox proj={project} />\n                ))}\n              </Stack>\n            </TabPanel>\n            <TabPanel>\n            <JSONPretty\n              mainStyle=\"padding:1em;\"\n              style={{ borderRadius: '20px' }}\n              id=\"json-pretty\"\n              data={{\n                personalData: { ...personalData },\n                softwareProjects: { ...softwareProjects },\n                webappLinks: { ...webappLinks },\n              }}\n              theme={JSONPrettyMon}\n            ></JSONPretty>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n        \n      </Box>\n      <GlobalStyle/>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {ChakraProvider, extendTheme} from \"@chakra-ui/react\"\n\n// const theme = extendTheme({\n//   styles: {\n//     global: {\n//       body: {\n//         bg: \"black\",\n//         color: \"white\",\n//       },\n//     },\n//   },\n// })\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}